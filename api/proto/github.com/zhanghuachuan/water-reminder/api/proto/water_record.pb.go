// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.29.3
// source: water_record.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        float32                `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	DrinkType     string                 `protobuf:"bytes,3,opt,name=drink_type,json=drinkType,proto3" json:"drink_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordRequest) Reset() {
	*x = CreateRecordRequest{}
	mi := &file_water_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordRequest) ProtoMessage() {}

func (x *CreateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_water_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateRecordRequest) Descriptor() ([]byte, []int) {
	return file_water_record_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRecordRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateRecordRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateRecordRequest) GetDrinkType() string {
	if x != nil {
		return x.DrinkType
	}
	return ""
}

type CreateRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      uint32                 `protobuf:"varint,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	Amount        float32                `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	DrinkType     string                 `protobuf:"bytes,3,opt,name=drink_type,json=drinkType,proto3" json:"drink_type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordResponse) Reset() {
	*x = CreateRecordResponse{}
	mi := &file_water_record_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordResponse) ProtoMessage() {}

func (x *CreateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_water_record_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateRecordResponse) Descriptor() ([]byte, []int) {
	return file_water_record_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRecordResponse) GetRecordId() uint32 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *CreateRecordResponse) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateRecordResponse) GetDrinkType() string {
	if x != nil {
		return x.DrinkType
	}
	return ""
}

func (x *CreateRecordResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordsRequest) Reset() {
	*x = GetRecordsRequest{}
	mi := &file_water_record_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsRequest) ProtoMessage() {}

func (x *GetRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_water_record_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsRequest.ProtoReflect.Descriptor instead.
func (*GetRecordsRequest) Descriptor() ([]byte, []int) {
	return file_water_record_proto_rawDescGZIP(), []int{2}
}

func (x *GetRecordsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount        float32                `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	DrinkType     string                 `protobuf:"bytes,3,opt,name=drink_type,json=drinkType,proto3" json:"drink_type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_water_record_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_water_record_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_water_record_proto_rawDescGZIP(), []int{3}
}

func (x *Record) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Record) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Record) GetDrinkType() string {
	if x != nil {
		return x.DrinkType
	}
	return ""
}

func (x *Record) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*Record              `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordsResponse) Reset() {
	*x = GetRecordsResponse{}
	mi := &file_water_record_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsResponse) ProtoMessage() {}

func (x *GetRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_water_record_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsResponse.ProtoReflect.Descriptor instead.
func (*GetRecordsResponse) Descriptor() ([]byte, []int) {
	return file_water_record_proto_rawDescGZIP(), []int{4}
}

func (x *GetRecordsResponse) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

type GetTodayIntakeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTodayIntakeRequest) Reset() {
	*x = GetTodayIntakeRequest{}
	mi := &file_water_record_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTodayIntakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTodayIntakeRequest) ProtoMessage() {}

func (x *GetTodayIntakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_water_record_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTodayIntakeRequest.ProtoReflect.Descriptor instead.
func (*GetTodayIntakeRequest) Descriptor() ([]byte, []int) {
	return file_water_record_proto_rawDescGZIP(), []int{5}
}

func (x *GetTodayIntakeRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetTodayIntakeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalAmount   float32                `protobuf:"fixed32,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTodayIntakeResponse) Reset() {
	*x = GetTodayIntakeResponse{}
	mi := &file_water_record_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTodayIntakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTodayIntakeResponse) ProtoMessage() {}

func (x *GetTodayIntakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_water_record_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTodayIntakeResponse.ProtoReflect.Descriptor instead.
func (*GetTodayIntakeResponse) Descriptor() ([]byte, []int) {
	return file_water_record_proto_rawDescGZIP(), []int{6}
}

func (x *GetTodayIntakeResponse) GetTotalAmount() float32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

var File_water_record_proto protoreflect.FileDescriptor

const file_water_record_proto_rawDesc = "" +
	"\n" +
	"\x12water_record.proto\x12\x1bwater_reminder.water_record\"e\n" +
	"\x13CreateRecordRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x02R\x06amount\x12\x1d\n" +
	"\n" +
	"drink_type\x18\x03 \x01(\tR\tdrinkType\"\x88\x01\n" +
	"\x14CreateRecordResponse\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\rR\brecordId\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x02R\x06amount\x12\x1d\n" +
	"\n" +
	"drink_type\x18\x03 \x01(\tR\tdrinkType\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\",\n" +
	"\x11GetRecordsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\"m\n" +
	"\x06Record\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x02R\x06amount\x12\x1d\n" +
	"\n" +
	"drink_type\x18\x03 \x01(\tR\tdrinkType\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"S\n" +
	"\x12GetRecordsResponse\x12=\n" +
	"\arecords\x18\x01 \x03(\v2#.water_reminder.water_record.RecordR\arecords\"0\n" +
	"\x15GetTodayIntakeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\rR\x06userId\";\n" +
	"\x16GetTodayIntakeResponse\x12!\n" +
	"\ftotal_amount\x18\x01 \x01(\x02R\vtotalAmount2\xf3\x02\n" +
	"\x12WaterRecordService\x12s\n" +
	"\fCreateRecord\x120.water_reminder.water_record.CreateRecordRequest\x1a1.water_reminder.water_record.CreateRecordResponse\x12m\n" +
	"\n" +
	"GetRecords\x12..water_reminder.water_record.GetRecordsRequest\x1a/.water_reminder.water_record.GetRecordsResponse\x12y\n" +
	"\x0eGetTodayIntake\x122.water_reminder.water_record.GetTodayIntakeRequest\x1a3.water_reminder.water_record.GetTodayIntakeResponseB3Z1github.com/zhanghuachuan/water-reminder/api/protob\x06proto3"

var (
	file_water_record_proto_rawDescOnce sync.Once
	file_water_record_proto_rawDescData []byte
)

func file_water_record_proto_rawDescGZIP() []byte {
	file_water_record_proto_rawDescOnce.Do(func() {
		file_water_record_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_water_record_proto_rawDesc), len(file_water_record_proto_rawDesc)))
	})
	return file_water_record_proto_rawDescData
}

var file_water_record_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_water_record_proto_goTypes = []any{
	(*CreateRecordRequest)(nil),    // 0: water_reminder.water_record.CreateRecordRequest
	(*CreateRecordResponse)(nil),   // 1: water_reminder.water_record.CreateRecordResponse
	(*GetRecordsRequest)(nil),      // 2: water_reminder.water_record.GetRecordsRequest
	(*Record)(nil),                 // 3: water_reminder.water_record.Record
	(*GetRecordsResponse)(nil),     // 4: water_reminder.water_record.GetRecordsResponse
	(*GetTodayIntakeRequest)(nil),  // 5: water_reminder.water_record.GetTodayIntakeRequest
	(*GetTodayIntakeResponse)(nil), // 6: water_reminder.water_record.GetTodayIntakeResponse
}
var file_water_record_proto_depIdxs = []int32{
	3, // 0: water_reminder.water_record.GetRecordsResponse.records:type_name -> water_reminder.water_record.Record
	0, // 1: water_reminder.water_record.WaterRecordService.CreateRecord:input_type -> water_reminder.water_record.CreateRecordRequest
	2, // 2: water_reminder.water_record.WaterRecordService.GetRecords:input_type -> water_reminder.water_record.GetRecordsRequest
	5, // 3: water_reminder.water_record.WaterRecordService.GetTodayIntake:input_type -> water_reminder.water_record.GetTodayIntakeRequest
	1, // 4: water_reminder.water_record.WaterRecordService.CreateRecord:output_type -> water_reminder.water_record.CreateRecordResponse
	4, // 5: water_reminder.water_record.WaterRecordService.GetRecords:output_type -> water_reminder.water_record.GetRecordsResponse
	6, // 6: water_reminder.water_record.WaterRecordService.GetTodayIntake:output_type -> water_reminder.water_record.GetTodayIntakeResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_water_record_proto_init() }
func file_water_record_proto_init() {
	if File_water_record_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_water_record_proto_rawDesc), len(file_water_record_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_water_record_proto_goTypes,
		DependencyIndexes: file_water_record_proto_depIdxs,
		MessageInfos:      file_water_record_proto_msgTypes,
	}.Build()
	File_water_record_proto = out.File
	file_water_record_proto_goTypes = nil
	file_water_record_proto_depIdxs = nil
}
